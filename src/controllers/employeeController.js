const crypto = require('crypto');
const Employee = require('../models/employeeModel');

// âœ… RÃ©cupÃ¨re tous les employÃ©s
exports.getAllEmployees = (req, res) => {
  Employee.getAll((err, results) => {
    if (err) return res.status(500).json({ error: err.message });
    res.json(results);
  });
};

// âœ… RÃ©cupÃ¨re un employÃ© par son ID
exports.getEmployeeById = (req, res) => {
  Employee.getById(req.params.id, (err, results) => {
    if (err) return res.status(500).json({ error: err.message });
    if (results.length === 0) return res.status(404).json({ message: 'EmployÃ© non trouvÃ©' });
    res.json(results[0]);
  });
};

// âœ… CrÃ©e un employÃ© avec un champ created_by = id du user connectÃ©
exports.createEmployee = (req, res) => {
  const data = req.body;

  const qrData = `${data.nom}_${data.prenom}_${Date.now()}`;
  const qr_code = crypto.createHash('sha256').update(qrData).digest('hex');

  // ğŸ”— On ajoute created_by depuis le token
  const employeeData = { 
    ...data, 
    qr_code, 
    created_by: req.user.id 
  };

  Employee.create(employeeData, (err, result) => {
    if (err) return res.status(500).json({ error: err.message });
    res.status(201).json({
      message: 'EmployÃ© ajoutÃ© avec succÃ¨s',
      id: result.insertId,
      qr_code
    });
  });
};

// âœ… RÃ©cupÃ¨re les employÃ©s crÃ©Ã©s par un utilisateur (basÃ© sur son token)
exports.getEmployeesByCreator = (req, res) => {
  const userId = req.user.id;
  Employee.getByCreator(userId, (err, results) => {
    if (err) return res.status(500).json({ error: err.message });
    res.json(results);
  });
};

// âœ… Mise Ã  jour d'un employÃ©
exports.updateEmployee = (req, res) => {
  const data = req.body;
  Employee.update(req.params.id, data, (err) => {
    if (err) return res.status(500).json({ error: err.message });
    res.json({ message: 'EmployÃ© mis Ã  jour avec succÃ¨s' });
  });
};

// âœ… Suppression d'un employÃ©
exports.deleteEmployee = (req, res) => {
  Employee.delete(req.params.id, (err) => {
    if (err) return res.status(500).json({ error: err.message });
    res.json({ message: 'EmployÃ© supprimÃ© avec succÃ¨s' });
  });
};
