// models/employeeModel.js
const db = require('../config/db');

const Employee = {
  // ðŸ”¹ RÃ©cupÃ©rer tous les employÃ©s
  getAll: (callback) => {
    const sql = `
      SELECT e.*, u.nom AS created_by_name, c.nom AS company_name
      FROM employees e
      LEFT JOIN users u ON e.created_by = u.id
      LEFT JOIN companies c ON e.company_id = c.id
    `;
    db.query(sql, callback);
  },

  // ðŸ”¹ RÃ©cupÃ©rer un employÃ© par ID
  getById: (id, callback) => {
    const sql = `
      SELECT e.*, u.nom AS created_by_name, c.nom AS company_name
      FROM employees e
      LEFT JOIN users u ON e.created_by = u.id
      LEFT JOIN companies c ON e.company_id = c.id
      WHERE e.id = ?
    `;
    db.query(sql, [id], callback);
  },

  // ðŸ”¹ RÃ©cupÃ©rer les employÃ©s dâ€™un crÃ©ateur donnÃ©
  getByCreator: (userId, callback) => {
    const sql = `
      SELECT e.*, c.nom AS company_name
      FROM employees e
      LEFT JOIN companies c ON e.company_id = c.id
      WHERE e.created_by = ?
    `;
    db.query(sql, [userId], callback);
  },

  // ðŸ”¹ RÃ©cupÃ©rer les employÃ©s dâ€™une entreprise donnÃ©e
  getByCompany: (companyId, callback) => {
    const sql = `SELECT * FROM employees WHERE company_id = ?`;
    db.query(sql, [companyId], callback);
  },

  // ðŸ”¹ CrÃ©er un nouvel employÃ©
  create: (data, callback) => {
    const sql = `INSERT INTO employees SET ?`;
    db.query(sql, data, callback);
  },

  // ðŸ”¹ Mettre Ã  jour un employÃ©
  update: (id, data, callback) => {
    const sql = `UPDATE employees SET ? WHERE id = ?`;
    db.query(sql, [data, id], callback);
  },

  // ðŸ”¹ Supprimer un employÃ©
  delete: (id, callback) => {
    const sql = `DELETE FROM employees WHERE id = ?`;
    db.query(sql, [id], callback);
  }
};

module.exports = Employee;
